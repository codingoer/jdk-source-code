package sun.rmi.rmic.iiop;

import sun.tools.java.Identifier;

public interface Constants extends sun.rmi.rmic.Constants {
   Identifier idReplyHandler = Identifier.lookup("org.omg.CORBA.portable.ResponseHandler");
   Identifier idStubBase = Identifier.lookup("javax.rmi.CORBA.Stub");
   Identifier idTieBase = Identifier.lookup("org.omg.CORBA.portable.ObjectImpl");
   Identifier idTieInterface = Identifier.lookup("javax.rmi.CORBA.Tie");
   Identifier idPOAServantType = Identifier.lookup("org.omg.PortableServer.Servant");
   Identifier idDelegate = Identifier.lookup("org.omg.CORBA.portable.Delegate");
   Identifier idOutputStream = Identifier.lookup("org.omg.CORBA.portable.OutputStream");
   Identifier idExtOutputStream = Identifier.lookup("org.omg.CORBA_2_3.portable.OutputStream");
   Identifier idInputStream = Identifier.lookup("org.omg.CORBA.portable.InputStream");
   Identifier idExtInputStream = Identifier.lookup("org.omg.CORBA_2_3.portable.InputStream");
   Identifier idSystemException = Identifier.lookup("org.omg.CORBA.SystemException");
   Identifier idBadMethodException = Identifier.lookup("org.omg.CORBA.BAD_OPERATION");
   Identifier idPortableUnknownException = Identifier.lookup("org.omg.CORBA.portable.UnknownException");
   Identifier idApplicationException = Identifier.lookup("org.omg.CORBA.portable.ApplicationException");
   Identifier idRemarshalException = Identifier.lookup("org.omg.CORBA.portable.RemarshalException");
   Identifier idJavaIoExternalizable = Identifier.lookup("java.io.Externalizable");
   Identifier idCorbaObject = Identifier.lookup("org.omg.CORBA.Object");
   Identifier idCorbaORB = Identifier.lookup("org.omg.CORBA.ORB");
   Identifier idClassDesc = Identifier.lookup("javax.rmi.CORBA.ClassDesc");
   Identifier idJavaIoIOException = Identifier.lookup("java.io.IOException");
   Identifier idIDLEntity = Identifier.lookup("org.omg.CORBA.portable.IDLEntity");
   Identifier idValueBase = Identifier.lookup("org.omg.CORBA.portable.ValueBase");
   Identifier idBoxedRMI = Identifier.lookup("org.omg.boxedRMI");
   Identifier idBoxedIDL = Identifier.lookup("org.omg.boxedIDL");
   Identifier idCorbaUserException = Identifier.lookup("org.omg.CORBA.UserException");
   Identifier idBoolean = Identifier.lookup("boolean");
   Identifier idByte = Identifier.lookup("byte");
   Identifier idChar = Identifier.lookup("char");
   Identifier idShort = Identifier.lookup("short");
   Identifier idInt = Identifier.lookup("int");
   Identifier idLong = Identifier.lookup("long");
   Identifier idFloat = Identifier.lookup("float");
   Identifier idDouble = Identifier.lookup("double");
   Identifier idVoid = Identifier.lookup("void");
   int INDENT_STEP = 4;
   int TAB_SIZE = Integer.MAX_VALUE;
   int STATUS_PENDING = 0;
   int STATUS_VALID = 1;
   int STATUS_INVALID = 2;
   String NAME_SEPARATOR = ".";
   String SERIAL_VERSION_UID = "serialVersionUID";
   String[] IDL_KEYWORDS = new String[]{"abstract", "any", "attribute", "boolean", "case", "char", "const", "context", "custom", "default", "double", "enum", "exception", "factory", "FALSE", "fixed", "float", "in", "inout", "interface", "long", "module", "native", "Object", "octet", "oneway", "out", "private", "public", "raises", "readonly", "sequence", "short", "string", "struct", "supports", "switch", "TRUE", "truncatable", "typedef", "unsigned", "union", "ValueBase", "valuetype", "void", "wchar", "wstring"};
   String EXCEPTION_SUFFIX = "Exception";
   String ERROR_SUFFIX = "Error";
   String EX_SUFFIX = "Ex";
   String IDL_REPOSITORY_ID_PREFIX = "IDL:";
   String IDL_REPOSITORY_ID_VERSION = ":1.0";
   String[] IDL_CORBA_MODULE = new String[]{"CORBA"};
   String[] IDL_SEQUENCE_MODULE = new String[]{"org", "omg", "boxedRMI"};
   String[] IDL_BOXEDIDL_MODULE = new String[]{"org", "omg", "boxedIDL"};
   String IDL_CLASS = "ClassDesc";
   String[] IDL_CLASS_MODULE = new String[]{"javax", "rmi", "CORBA"};
   String IDL_IDLENTITY = "IDLEntity";
   String IDL_SERIALIZABLE = "Serializable";
   String IDL_EXTERNALIZABLE = "Externalizable";
   String[] IDL_JAVA_IO_MODULE = new String[]{"java", "io"};
   String[] IDL_ORG_OMG_CORBA_MODULE = new String[]{"org", "omg", "CORBA"};
   String[] IDL_ORG_OMG_CORBA_PORTABLE_MODULE = new String[]{"org", "omg", "CORBA", "portable"};
   String IDL_JAVA_LANG_OBJECT = "_Object";
   String[] IDL_JAVA_LANG_MODULE = new String[]{"java", "lang"};
   String IDL_JAVA_RMI_REMOTE = "Remote";
   String[] IDL_JAVA_RMI_MODULE = new String[]{"java", "rmi"};
   String IDL_SEQUENCE = "seq";
   String IDL_CONSTRUCTOR = "create";
   String IDL_NAME_SEPARATOR = "::";
   String IDL_BOOLEAN = "boolean";
   String IDL_BYTE = "octet";
   String IDL_CHAR = "wchar";
   String IDL_SHORT = "short";
   String IDL_INT = "long";
   String IDL_LONG = "long long";
   String IDL_FLOAT = "float";
   String IDL_DOUBLE = "double";
   String IDL_VOID = "void";
   String IDL_STRING = "WStringValue";
   String IDL_CONSTANT_STRING = "wstring";
   String IDL_CORBA_OBJECT = "Object";
   String IDL_ANY = "any";
   String SOURCE_FILE_EXTENSION = ".java";
   String IDL_FILE_EXTENSION = ".idl";
   int TYPE_VOID = 1;
   int TYPE_BOOLEAN = 2;
   int TYPE_BYTE = 4;
   int TYPE_CHAR = 8;
   int TYPE_SHORT = 16;
   int TYPE_INT = 32;
   int TYPE_LONG = 64;
   int TYPE_FLOAT = 128;
   int TYPE_DOUBLE = 256;
   int TYPE_STRING = 512;
   int TYPE_ANY = 1024;
   int TYPE_CORBA_OBJECT = 2048;
   int TYPE_REMOTE = 4096;
   int TYPE_ABSTRACT = 8192;
   int TYPE_NC_INTERFACE = 16384;
   int TYPE_VALUE = 32768;
   int TYPE_IMPLEMENTATION = 65536;
   int TYPE_NC_CLASS = 131072;
   int TYPE_ARRAY = 262144;
   int TYPE_JAVA_RMI_REMOTE = 524288;
   int TYPE_NONE = 0;
   int TYPE_ALL = -1;
   int TYPE_MASK = 16777215;
   int TM_MASK = -16777216;
   int TM_PRIMITIVE = 16777216;
   int TM_COMPOUND = 33554432;
   int TM_CLASS = 67108864;
   int TM_INTERFACE = 134217728;
   int TM_SPECIAL_CLASS = 268435456;
   int TM_SPECIAL_INTERFACE = 536870912;
   int TM_NON_CONFORMING = 1073741824;
   int TM_INNER = Integer.MIN_VALUE;
   int ATTRIBUTE_NONE = 0;
   int ATTRIBUTE_IS = 1;
   int ATTRIBUTE_GET = 2;
   int ATTRIBUTE_IS_RW = 3;
   int ATTRIBUTE_GET_RW = 4;
   int ATTRIBUTE_SET = 5;
   String[] ATTRIBUTE_WIRE_PREFIX = new String[]{"", "_get_", "_get_", "_get_", "_get_", "_set_"};
}
